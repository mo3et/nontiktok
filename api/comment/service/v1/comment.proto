syntax = "proto3";

package comment.service.v1;

option go_package = "nontiktok/api/comment/service/v1;v1";

import "google/api/annotations.proto";

service CommentService {
	rpc GetCommentList(CommentListRequest) returns (CommentListReply) {
		option (google.api.http) = {
			get: "/douyin/comment/list"
		};
	}
	rpc CommentAction(CommentActionRequest) returns (CommentActionReply) {
		option (google.api.http) = {
			post: "/douyin/comment/action"
			body: "*"
		};
	}
}

message CommentListRequest {
	string token = 1;
	uint32 video_id = 2;
}

message CommentListReply {
	int32 status_code = 1 [json_name = "status_code"];
	string status_msg = 2 [json_name = "status_msg"];
	repeated Comment comment_list = 3 [json_name = "comment_list"];
}

message CommentActionRequest {
	string token = 1;
	uint32 video_id = 2;
	uint32 action_type = 3;
	string comment_text = 4;
	uint32 comment_id = 5;
}

message CommentActionReply {
	int32 status_code = 1 [json_name = "status_code"];
	string status_msg = 2 [json_name = "status_msg"];
	Comment comment = 3 [json_name = "comment"];
}

message Comment {
	uint32 id = 1 [json_name = "id"];
	User user =2 [json_name = "user"];
	string content = 3 [json_name = "content"];
	string create_date = 4 [json_name = "create_date"];
}

message User {
	uint32 id = 1 [json_name = "id"];
	string name = 2 [json_name = "name"];
	uint32 follow_count = 3 [json_name = "follow_count"];
	uint32 follower_count = 4 [json_name = "follower_count"];
	bool is_follow = 5 [json_name = "is_follow"];
	string avatar = 6 [json_name = "avatar"];
	string background_image = 7 [json_name = "background_image"];
	string signature = 8 [json_name = "signature"];
	uint32 total_favorited = 9 [json_name = "total_favorited"];
	uint32 work_count = 10 [json_name = "work_count"];
	uint32 favorite_count = 11 [json_name = "favorite_count"];
}
